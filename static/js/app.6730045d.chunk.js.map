{"version":3,"sources":["assets/ding.wav","modules/sunrise.js","assets/Meditation.ttf","styles/container.jsx","components/Ding.jsx","components/Notification.jsx","components/Sunrise.jsx","App.js"],"names":["module","exports","nextSunrise","lat","long","dayOffset","tau","Math","PI","millisecondsInDay","radFactor","time","timeObject","now","Date","getTime","date","day","offset","getTimezoneOffset","calculateSunrise","days","floor","dayJulian","Julian","oblique","obliqueCorrection","cos","fyear","tan","anom","longSunMean","sunCenter","sin","longSunTrue","longSunApparent","eccentric","equationTime","solarNoon","declinationAngle","asin","ha","acos","sunrise","sunriseDate","styles","backgroundColor","textColor","StyleSheet","create","container","flex","alignItems","justifyContent","screen","textContainer","color","dingButtonContainer","marginTop","dingButton","height","text","fontSize","textTime","textHeader","textCountDown","stylesTime","Ding","props","handleDing","a","async","Audio","Sound","createAsync","require","sound","playAsync","ding","current","View","style","TouchableOpacity","onPress","message","Text","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","Notification","useState","setExpoPushToken","setNotification","notificationListener","useRef","responseListener","schedulePushNotification","didSendNotification","console","log","content","title","trigger","seconds","brahmaMuhurtaCountdown","minutes","hours","useEffect","Constants","isDevice","existingStatus","status","finalStatus","alert","token","data","Platform","OS","name","importance","MAX","vibrationPattern","lightColor","registerForPushNotificationsAsync","then","notification","response","isBrahmaMuhurta","Sunrise","setSunrise","setFontsLoaded","location","brahmaMuhurta","timeDifference","getLocation","Location","coords","latitude","longitude","Font","Meditation","this","tomorrowSunrise","toTimeString","slice","App","setTime","tick","setInterval","clearInterval","LinearGradient","colors"],"mappings":"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","file":"static/js/app.6730045d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ding.7764176f.wav\";","function nextSunrise(lat = 0, long = 0, dayOffset = 0) {\r\n  const tau = 2 * Math.PI\r\n  const millisecondsInDay = 86400000\r\n  const radFactor = tau / 360\r\n  lat = lat * radFactor\r\n  long = long * radFactor\r\n  const time = timeObject(dayOffset - 1)\r\n\r\n  function timeObject(dayOffset = 0) {\r\n\r\n    let now = new Date\r\n    if (dayOffset) {\r\n      now = new Date(now.getTime() + dayOffset * millisecondsInDay)\r\n    }\r\n    const date = new Date(now.getTime() - (now.getTime() % millisecondsInDay))\r\n    const day = (now.getTime() % millisecondsInDay) / millisecondsInDay\r\n\r\n    let time = {\r\n      now: now,\r\n      date: date,\r\n      day: day,\r\n      offset: -now.getTimezoneOffset() / 60,\r\n    }\r\n    return time\r\n  }\r\n\r\n  function calculateSunrise(time, lat = 0, long = 0) {\r\n    const days = Math.floor(time.now.getTime() / 86400000)\r\n\r\n    const dayJulian = days + 2440589 - time.offset / 24\r\n\r\n    const Julian = (dayJulian - 2451545) / 36525\r\n\r\n    const oblique = radFactor * (23 + (26 + ((21.448 - Julian * (46.815 + Julian * (0.00059 - Julian * 0.001813)))) / 60) / 60)\r\n\r\n    const obliqueCorrection = (oblique + 0.00004468 * Math.cos(2.18235 - 33.757041 * Julian))\r\n\r\n    const fyear = Math.tan(obliqueCorrection / 2) * Math.tan(obliqueCorrection / 2)\r\n\r\n    const anom = 6.24006014 + Julian * (628.30195515 - 0.0000026826 * Julian)\r\n\r\n    const longSunMean = radFactor * ((280.46646 + Julian * (36000.76983 + Julian * 0.0003032)) % 360)\r\n\r\n    const sunCenter = Math.sin(anom) * (0.0334161088 - Julian * (0.0000840725 + 0.000000244 * Julian)) + Math.sin(2 * anom) * (0.0003489437 - 0.000001763 * Julian) + Math.sin(3 * anom) * 0.000005044\r\n\r\n    const longSunTrue = longSunMean + sunCenter\r\n\r\n    const longSunApparent = longSunTrue - 0.0000993 - 0.00008343 * Math.sin(2.18236 - 33.757041 * Julian)\r\n\r\n    const eccentric = 0.016708634 - Julian * (0.000042037 + 0.0000001267 * Julian)\r\n\r\n    const equationTime = 4 * (fyear * Math.sin(2 * longSunMean) - 2 * eccentric * Math.sin(anom) + 4 * eccentric * fyear * Math.sin(anom) * Math.cos(2 * longSunMean) - 0.5 * fyear * fyear * Math.sin(4 * longSunMean) - 1.25 * eccentric * eccentric * Math.sin(2 * anom))\r\n\r\n    const solarNoon = 0.5 - long / tau - (equationTime) / (4 * tau) + time.offset / 24\r\n\r\n    const declinationAngle = Math.asin(Math.sin(obliqueCorrection) * Math.sin(longSunApparent))\r\n\r\n    const ha = Math.acos(Math.cos(90.833 * radFactor) / (Math.cos(lat) * Math.cos(declinationAngle)) - Math.tan(lat) * Math.tan(declinationAngle))\r\n\r\n    const sunrise = (solarNoon - ha / tau)\r\n\r\n    const sunriseDate = new Date((sunrise + 1 - time.offset / 24) * millisecondsInDay + time.date.getTime())\r\n\r\n    return sunriseDate\r\n  }\r\n\r\n  let sunrise = calculateSunrise(time, lat, long)\r\n  if ((new Date()) >= sunrise) {\r\n    sunrise = calculateSunrise(timeObject(dayOffset), lat, long)\r\n  }\r\n\r\n  return sunrise\r\n}\r\n\r\nmodule.exports = {\r\n  nextSunrise,\r\n};","module.exports = __webpack_public_path__ + \"./fonts/Meditation.ttf\";","import { StyleSheet } from 'react-native';\r\n\r\nconst sky = '#22A3F5'\r\nconst lull = '#223AF5'\r\nconst brahmaMuhurta = '#77628d'\r\nconst dusk = '#fab3a6'\r\nconst black = '#000'\r\nconst white = '#fff'\r\nconst transparent = 'transparent'\r\n\r\nconst backgroundColor = transparent\r\nconst textColor = '#d98d7b'\r\n\r\nfunction stylesTime(backgroundColor, textColor, font = null) {\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: backgroundColor,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    screen: {\r\n      flex: 1,\r\n      backgroundColor: backgroundColor,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    textContainer: {\r\n      backgroundColor: backgroundColor,\r\n      color: backgroundColor,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    dingButtonContainer: {\r\n      marginTop: 100,\r\n    },\r\n    dingButton: {\r\n      height: 20,\r\n    },\r\n    text: {\r\n      color: textColor,\r\n      fontSize: 30,\r\n      // fontFamily: font,\r\n    },\r\n    textTime: {\r\n      color: textColor,\r\n      backgroundColor: 'rgba(0, 0, 0, 0)',\r\n      fontSize: 140,\r\n    },\r\n    textHeader: {\r\n      color: textColor,\r\n      fontSize: 33,\r\n    },\r\n    textCountDown: {\r\n      color: textColor,\r\n      fontSize: 35,\r\n      marginTop: 14,\r\n    },\r\n  });\r\n\r\n  return styles\r\n}\r\n\r\nconst styles = stylesTime(backgroundColor, textColor)\r\n\r\nexport default styles","import React, { useRef } from 'react'\r\nimport { View, Button, TouchableOpacity, Text } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\nimport styles from '../styles/container';\r\n\r\nfunction Ding(props) {\r\n  async function handleDing() {\r\n    const { sound } = await Audio.Sound.createAsync(\r\n      require('../assets/ding.wav')\r\n    );\r\n    await sound.playAsync()\r\n  }\r\n\r\n  if (props.ding.current) {\r\n    handleDing()\r\n    props.ding.current = false\r\n  }\r\n\r\n  return (\r\n    <View style={[styles.textContainer]}>\r\n      <TouchableOpacity\r\n        onPress={() => handleDing()}\r\n        style={{}}>\r\n          {\r\n            props.message === 'Brahma Muhurta'?\r\n            <Text style={[styles.text]}>{props.message}</Text>:\r\n            <Text style={[styles.text, styles.textTime]}>{props.message}</Text>\r\n          }\r\n        \r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Ding\r\n","import Constants from 'expo-constants';\r\nimport * as Notifications from 'expo-notifications';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Platform } from 'react-native';\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: false,\r\n    shouldSetBadge: false,\r\n  }),\r\n});\r\n\r\nfunction Notification(props) {\r\n  const [expoPushToken, setExpoPushToken] = useState('');\r\n  const [notification, setNotification] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n\r\n  useEffect(() => {\r\n    registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\r\n\r\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n      setNotification(notification);\r\n    });\r\n\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\r\n      console.log(response);\r\n    });\r\n\r\n    if (!props.didSendNotification.current && !props.isBrahmaMuhurta.current) {\r\n      schedulePushNotification(props.brahmaMuhurtaCountdown, props.didSendNotification)\r\n    }\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current);\r\n      Notifications.removeNotificationSubscription(responseListener.current);\r\n    };\r\n  }, []);\r\n\r\n  if (!props.didSendNotification.current && !props.isBrahmaMuhurta.current) {\r\n    schedulePushNotification(props.brahmaMuhurtaCountdown, props.didSendNotification)\r\n  }\r\n\r\n  async function schedulePushNotification() {\r\n    props.didSendNotification.current = true;\r\n    console.log(\"sent\")\r\n    await Notifications.scheduleNotificationAsync({\r\n      content: {\r\n        title: \"It's Brahma Muhurta 🕉\",\r\n      },\r\n      trigger: {\r\n        seconds: props.brahmaMuhurtaCountdown.seconds + 60 * props.brahmaMuhurtaCountdown.minutes + 3600 * props.brahmaMuhurtaCountdown.hours\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  async function registerForPushNotificationsAsync() {\r\n    let token;\r\n    if (Constants.isDevice) {\r\n      const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n      let finalStatus = existingStatus;\r\n      if (existingStatus !== 'granted') {\r\n        const { status } = await Notifications.requestPermissionsAsync();\r\n        finalStatus = status;\r\n      }\r\n      if (finalStatus !== 'granted') {\r\n        alert('Failed to get push token for push notification!');\r\n        return;\r\n      }\r\n      token = (await Notifications.getExpoPushTokenAsync()).data;\r\n    }\r\n\r\n    if (Platform.OS === 'android') {\r\n      Notifications.setNotificationChannelAsync('default', {\r\n        name: 'default',\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 0, 250],\r\n        lightColor: '#FF231F7C',\r\n      });\r\n    }\r\n\r\n    return token;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notification\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Text, View, Platform, StyleSheet } from 'react-native';\r\nimport * as Location from 'expo-location';\r\nimport * as Font from 'expo-font';\r\nimport Ding from \"./Ding.jsx\";\r\nimport styles from '../styles/container';\r\nimport Notification from \"./Notification.jsx\";\r\nconst { nextSunrise } = require('../modules/sunrise')\r\n\r\nfunction Sunrise(props) {\r\n  const [sunrise, setSunrise] = useState(() => null)\r\n  const [fontsLoaded, setFontsLoaded] = useState(() => false)\r\n  const location = useRef(null);\r\n  const brahmaMuhurta = useRef(null)\r\n  const isBrahmaMuhurta = useRef(false)\r\n  const didSendNotification = useRef(false)\r\n  const ding = useRef(false)\r\n\r\n  async function loadFonts() {\r\n    await Font.loadAsync({\r\n      Meditation: require('../assets/Meditation.ttf'),\r\n    });\r\n    setFontsLoaded(true);\r\n  }\r\n\r\n  const timeDifference = brahmaMuhurta.current - props.time\r\n\r\n  useEffect(() => {\r\n    getLocation()\r\n    loadFonts()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    brahmaMuhurta.current = new Date(sunrise?.getTime() - 5760000)\r\n  }, sunrise)\r\n\r\n  function getLocation() {\r\n    (async () => {\r\n      let { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        return;\r\n      }\r\n\r\n      location.current = await Location.getCurrentPositionAsync();\r\n      setSunrise(nextSunrise(location.current?.coords.latitude, location.current?.coords.longitude))\r\n    })();\r\n  };\r\n\r\n  const brahmaMuhurtaCountdown = {\r\n    seconds: Math.floor((timeDifference) / 1000 % 60),\r\n    minutes: Math.floor((timeDifference) / 60000 % 60),\r\n    hours: Math.floor((timeDifference) / 3600000),\r\n    text() {\r\n      const hours = this.hours ?\r\n        `${this.hours} hour` + ((this.hours !== 1) ? \"s, \" : \", \")\r\n        :\r\n        \"\"\r\n\r\n      const minutes = this.minutes ?\r\n        `${this.minutes} minute` + ((this.minutes !== 1) ? \"s\" : \"\")\r\n        :\r\n        \"\"\r\n\r\n      if (!hours && !minutes) {\r\n        return \"Brahma Muhurta soon\"\r\n      }\r\n\r\n      return hours + minutes\r\n    },\r\n  }\r\n\r\n  if (!location.current) {\r\n    getLocation()\r\n  } else {\r\n\r\n    if (props.time >= sunrise && !!location.current) {\r\n      setSunrise(nextSunrise(location.current?.coords.latitude, location.current?.coords.longitude))\r\n    }\r\n\r\n    if (timeDifference <= 0 && !isBrahmaMuhurta.current) {\r\n      ding.current = true\r\n      isBrahmaMuhurta.current = true\r\n      didSendNotification.current = false\r\n    }\r\n\r\n    if (timeDifference <= -48 * 60 * 1000) {\r\n      ding.current = true\r\n      const tomorrowSunrise = nextSunrise(location.current?.coords.latitude, location.current?.coords.longitude, 1)\r\n      brahmaMuhurta.current = new Date(tomorrowSunrise?.getTime() - 5760000)\r\n      isBrahmaMuhurta.current = false\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <View style={[styles.container]}>\r\n      <View style={[styles.container]}>\r\n      </View>\r\n      {\r\n        location.current &&\r\n          brahmaMuhurta.current.toTimeString() !== \"Invalid Date\" ?\r\n          <View style={[styles.textContainer]}>\r\n            {\r\n              isBrahmaMuhurta.current ?\r\n                <Ding ding={ding} brahmaMuhurta={brahmaMuhurta} message={'Brahma Muhurta'} />\r\n                :\r\n                <>\r\n                  <Text style={[styles.text, styles.textHeader]}>Next Brahma Muhurta</Text>\r\n                  <Ding ding={ding} message={brahmaMuhurta.current?.toTimeString().slice(0, 5)} />\r\n                  <Text style={[styles.text, styles.textCountDown]}>{brahmaMuhurtaCountdown.text()}</Text>\r\n                </>\r\n            }\r\n          </View>\r\n          :\r\n          <View style={[styles.container]}>\r\n          </View>\r\n      }\r\n      <View style={[styles.container]}>\r\n      </View>\r\n      {\r\n        location.current &&\r\n          brahmaMuhurta.current.toTimeString() !== \"Invalid Date\" ?\r\n          Platform.OS === 'android' || Platform.OS === 'ios' ?\r\n            <Notification\r\n              brahmaMuhurtaCountdown={brahmaMuhurtaCountdown}\r\n              isBrahmaMuhurta={isBrahmaMuhurta}\r\n              didSendNotification={didSendNotification} />\r\n            :\r\n            <></>\r\n          :\r\n          <></>\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Sunrise\r\n","import React, {useState, useEffect} from 'react';\r\nimport {SafeAreaView} from 'react-native';\r\nimport styles from './styles/container';\r\nimport Sunrise from \"./components/Sunrise.jsx\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nexport default function App() {\r\n  const [time, setTime] = useState(() => {\r\n    return new Date\r\n  })\r\n\r\n  useEffect(() => {\r\n    const tick = setInterval(() => {      \r\n      setTime(new Date)\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(tick)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={['#3e1a33', '#461069']}\r\n      style = {[styles.screen]}\r\n      >\r\n        <Sunrise time={time}/>\r\n    </LinearGradient>\r\n  );\r\n}"],"sourceRoot":""}